@model List<DLL.ViewModel.VM_Employee>

@{
    ViewBag.Title = "PFMembers";
}

<div class="row"><div class="col-md-12">
    <fieldset><legend>Withdrawal / Settlement of Member's Fund</legend></fieldset>
                     @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                     {
                         <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
                     }
    
    <div style="color:red" class="alert alert-warning middle">@ViewBag.Message - @Html.ActionLink((string)ViewBag.Deactivated, "PFMembershipClosedList") 
        <input type="text" style="font-size:smaller" placeholder="Search by Member Name/ID " class="pull-right col-md-3" onkeyup="FilterTable()" id="filterBox"/>
    </div>
    
<table class="table table-striped table-condensed" style="text-align:center; font-size:smaller" id="data">
        <tr id="Header" style="font-weight:bold; text-align:center">
            <td>Employee ID</td>
            <td>Employee Name</td>
            <td>Joining Date</td>
            <td>PF Activate Date</td>
            @*<td>Retirement Date</td>*@
            <td></td>
            
        </tr>
        @for (var i = 0; i < Model.Count; i++ )
        {
            <tr>
                <td>@Html.DisplayFor(m => m[i].IdentificationNumber)</td>
                <td>@Html.DisplayFor(m => m[i].EmpName)</td>
                <td>
                    @if(Model[i].JoiningDate != null)
                    {
                        @String.Format("{0:dd'-'MMM'-'yyyy}", Model[i].JoiningDate.Value)
                    }
                </td>
                <td>@String.Format("{0:dd'-'MMM'-'yyyy}", Model[i].PFActivationDate.Value)</td>
                @*<td>@String.Format("{0:dd'-'MMM'-'yyyy}", Model[i].RetirementDate.Value)</td>*@
                <td>@Html.ActionLink("Close membership", "ClosePFMember", "Employee", new {empID = Model[i].EmpID, closingDate= System.DateTime.MinValue}, new {@class= "btn btn-warning btn-xs"})</td>
            </tr>
        }
    </table>
    </div></div>


<script>


    function FilterTable() {
        //InfoNotify("Key Press");
        index = -1;
        inp = $('#filterBox').val();

        //InfoNotify(inp);
        //This should ignore first row with th inside
        $("#data:visible tr:not(:has(>th))").each(function () {
            if (~$(this).text().toLowerCase().indexOf(inp.toLowerCase())) {
                // Show the row (in case it was previously hidden)
                $(this).show();
            } else {
                $(this).hide();
            }
        });
        $("#Header").show();
    }

</script>