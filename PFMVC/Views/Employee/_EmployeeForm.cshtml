@model DLL.ViewModel.VM_Employee

@using (Ajax.BeginForm("EmployeeForm", "Employee", null, new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "POST",
        OnSuccess = "updateSuccess1"
    }, new { @id = "DialogForm1" }))
{
    
    <div id="update-message1" class="error"></div>
    @Html.HiddenFor(model => model.EmpID)
    @Html.HiddenFor(model => model.PFStatusID)
    <div id="tabs">
        <ul>
            <li><a href="#tabs-1">Basic</a></li>
            <li><a href="#tabs-2">Extended</a></li>

        </ul>
        <div id="tabs-1">
            <table class="table table-striped table-condensed" style="font-size:smaller">
                @if (DLL.Utility.ApplicationSetting.Branch == true)
                {
                    <tr>
                        <td>
                            @Html.LabelFor(model => model, "Select Branch: ")
                        </td>
                        <td>
                            @Html.DropDownList("BranchID", null, "Select Branch Name", htmlAttributes: new { @class = "form-control", @id = "branch-name", @onchange="getBrachShortNamebyBranchID()" })
                        </td>
                    </tr>
                }
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Identification Number: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.IdentificationNumber, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;" , @class="form-control Next", @id ="shortName"})
                        @Html.ValidationMessageFor(model => model.IdentificationNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Employee Name: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.EmpName, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control Next" })
                        @Html.ValidationMessageFor(model => model.EmpName)
                    </td>
                </tr>
               
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Joining Date: ")
                    </td>
                    <td>
                        @if (Model.JoiningDate != null)
                        {
                            @Html.TextBoxFor(model => model.JoiningDate, "{0:dd'/'MMM'/'yyyy}", new { @class = "dateTimePickerNoFuture form-control Next", @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.JoiningDate, new { @class = "dateTimePickerNoFuture form-control Next", @readonly = "readonly" })
                        }
                        @Html.ValidationMessageFor(model => model.JoiningDate)
                    </td>
                </tr>
                  <tr>
                    <td>
                        @Html.LabelFor(model => model, "PF Activation Date: ")
                    </td>
                    <td>
                        @if (Model.PFActivationDate != null)
                        {
                            @Html.TextBoxFor(model => model.PFActivationDate, "{0:dd'/'MMM'/'yyyy}", new { @class = "dateTimePickerNoFuture form-control Next", @readonly = "readonly" })
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.PFActivationDate, new { @class = "dateTimePickerNoFuture form-control Next", @readonly = "readonly" })
                        }
                        @Html.ValidationMessageFor(model => model.PFActivationDate)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Designation Name: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.opDesignationName, new { @class = "form-control Next" })
                        @Html.ValidationMessageFor(model => model.opDesignationName)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Department Name: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(m => m.opDepartmentName, new { @class = "form-control Next" })
                        @Html.ValidationMessageFor(model => model.DepartmentID)
                    </td>
                </tr>
            </table>

        </div>
        <div id="tabs-2">
            <table class="table table-striped table-condensed">
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Contact/Mobile: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.ContactNumber, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;  ", @class="form-control " })
                        @Html.ValidationMessageFor(model => model.ContactNumber)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Birthdate: ")
                    </td>
                    <td>
                        @if (Model.BirthDate.HasValue)
                        {
                            @Html.TextBoxFor(model => model.BirthDate, "{0:dd'/'MMM'/'yyyy}", new { @class = "dateTimePickerNoFuture form-control", @readonly = "readonly" }) 
                        }
                        else
                        {
                            @Html.TextBoxFor(model => model.BirthDate, new { @class = "dateTimePickerNoFuture form-control", @readonly = "readonly" }) 
                        }
                        @Html.ValidationMessageFor(model => model.BirthDate)
                    </td>
                </tr>
               <tr>
                    <td>
                        @Html.LabelFor(model => model, "Email: ")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.Email, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control Next" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Opening Own Cont")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.opOwnContribution, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control " })
                        @Html.ValidationMessageFor(model => model.opOwnContribution)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Opening Emp Cont")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.opEmpContribution, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control " })
                        @Html.ValidationMessageFor(model => model.opEmpContribution)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Opening Loan balance")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.opLoan, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control " })
                        @Html.ValidationMessageFor(model => model.opLoan)
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model, "Opening Profit")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.opProfit, new { style = "max-width: 200px; max-height: 70px; min-width: 199px;", @class="form-control " })
                        @Html.ValidationMessageFor(model => model.opProfit)
                    </td>
                </tr>
            </table>
            @Html.HiddenFor(m => m.EmpImg)
        </div>

    </div>
    
}


<script>
    $(function () {
        $("#tabs").tabs();
        $('.dateTimePickerNoFuture').datepicker({ dateFormat: "dd/M/yy", changeYear: true, changeMonth: true, maxDate: "0D" });
    });
</script>

