@model List<DLL.ViewModel.VM_acc_VoucherDetail>
@{
    Layout = null;
}

<fieldset>
    <legend>Cash Book</legend>
        
    <div class="pull-left form-inline">
            <input type="text" value="" class="form-control input-sm dateTimePickerNoFuture strongBlue" placeholder="From Date" readonly="readonly" id="fromDate"/> - 
        <input type="text" value="" class="form-control input-sm dateTimePickerNoFuture strongBlue" placeholder="To Date" readonly="true" id="toDate"/>
        <button class="btn btn-info btn-xs" onclick="Filter()" id="filter">Filter</button>
        
        </div>
    
        <div class="pull-right">
        <button class="btn btn-success btn-xs pull-right" onclick="getreport()" id="report">Report</button>    
        </div>
    <br />
    <hr />

    <table class="table table-striped table-condensed smaller" id="LBook">
        <tr style="font-weight:bold;">
            <td>Tran. Date</td>
            <td>Group</td>
            <td>Ledger Name</td>
            <td>Voucher Number</td>
            <td>Particulars</td>
            
            <td>Debit</td>
            <td>Credit</td>
            <td style="text-align:right">Balance</td>
        </tr>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>
                <td>@Model[i].TransactionDate</td>
                <td>@Model[i].GroupName</td>
                <td>@Model[i].LedgerName</td>
                
                <td>@Ajax.ActionLink(Model[i].VNumber+"", "VoucherDetailMini", "CacheBook", new{ Area = "Accounting", voucherID = Model[i].voucherId}, new AjaxOptions{ HttpMethod="GET", OnSuccess= "ShowVoucherDetail"}) </td>
                <td>
                    @Model[i].Particulars <br />
                    @if (!string.IsNullOrEmpty(@Model[i].Narration))
                    {
                        <label class="mini">NRR: @Model[i].Narration</label><br />
                    }
                    @if (!string.IsNullOrEmpty(@Model[i].ChequeNumber))
                    {
                        <label class="mini">CHQ: @Model[i].ChequeNumber</label>
                    }
                </td>
                <td id="debit-@i">@if (@Model[i].Debit != 0)
                                  { @Model[i].Debit.ToString("#,###,##0.000") }</td>
                <td id="credit-@i">@if (@Model[i].Credit != 0)
                                   { @Model[i].Credit.ToString("#,###,##0.000") }</td>
                <td id="balance-@i" style="text-align:right"></td>
            </tr>
        }
          <tr style=" font-weight:bold">
            <td colspan="5"></td>
              <td id="c_debit"></td>
            <td id="c_credit"></td>
            <td id="c_balance" style="text-align:right"></td>
        </tr>
    </table>
    <hr />
    <div class="pull-right">@Html.Label("", new { @id="result"})</div>
</fieldset>

<script>
    $(document).ready(function () {
        var res_debit = 0;
        var res_credit = 0;
        var res_init = 0;

        var c_init = 0;
        var c_debit = 0;
        var c_credit = 0;

        var table = document.getElementById('LBook');

        var rowLength = table.rows.length;

        for (var i = 0; i < rowLength; i += 1) {

            // credit
            if (parseFloat($('#credit-' + i).text())) {
                res_credit = parseFloat($('#credit-' + i).text());
                c_credit = c_credit + res_credit;
            }
            else {
                res_credit = 0;
            }

            //debit
            if (parseFloat($('#debit-' + i).text())) {
                res_debit = parseFloat($('#debit-' + i).text());
                c_debit = c_debit + res_debit;
            }
            else {
                res_debit = 0;
            }

            //init
            if (parseFloat($('#init-' + i).text())) {
                res_init = parseFloat($('#init-' + i).text());
                c_init = c_init + res_init;
            }
            else {
                res_init = 0;
            }

            var result = parseFloat(res_init) + parseFloat(res_credit) - parseFloat(res_debit);
            if (!result) {
                result = 0;
            }
            var res_bal = result;
            if (parseFloat(res_bal) < 0) {
                $('#balance-' + i).text(AccFormatMoney((res_bal) * (-1)) + " Dr.");
            }
            else {
                $('#balance-' + i).text(AccFormatMoney(res_bal) + " Cr.");
            }
        }
        
        $('#c_init').text(AccFormatMoney(c_init) + "");
        $('#c_debit').text(AccFormatMoney(c_debit) + "");
        $('#c_credit').text(AccFormatMoney(c_credit) + "");
        var summary = parseFloat(c_init) + parseFloat(c_credit) - parseFloat(c_debit);
        if (summary < 0) {
            $('#c_balance').text(AccFormatMoney((summary) * (-1)) + " Dr.");
        }
        else {
            $('#c_balance').text(AccFormatMoney(summary) + " Cr.");
        }
    });
    function ShowVoucherDetail(data) {
        if (data.Success == false) {
            ShowModalMessage(data.ErrorMessage);
        }
        else {
            ShowModalMessage(data);
        }
    }

    function Filter() {
        $("#filter").notify("This feature not updated yet...");
    }

    function getreport() {
        //var d = new Date();
        //var x = document.querySelector('input[name="ReportOption"]:checked').value;

        //var ledgerID = $('#ledgerID').val();
        //var fDate = $('#fDate').val();
        //var tDate = $('#tDate').val();
        var viewURL = '../../Accounting/CacheBook/Report/';//?ledgerID=' + ledgerID + "&fromDate=" + fDate + "&toDate=" + tDate;
        //window.open(viewURL, 'window name', 'window settings')
        FancyBox(viewURL);
    }

    $(document).ready(function () {

        if ($.cookie("ckFromDate")) {
            $("#fromDate").val($.cookie("ckFromDate"));
        }
        if ($.cookie("ckToDate")) {
            $("#toDate").val($.cookie("ckToDate"));
        }
    })

</script>
